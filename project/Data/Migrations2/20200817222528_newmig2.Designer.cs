// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using project.Models;
using System;

namespace project.Data.Migrations2
{
    [DbContext(typeof(ParcInfoContext))]
    [Migration("20200817222528_newmig2")]
    partial class newmig2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("project.Models.App", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Apps");
                });

            modelBuilder.Entity("project.Models.AppPc", b =>
                {
                    b.Property<int>("AppId");

                    b.Property<int>("PcId");

                    b.HasKey("AppId", "PcId");

                    b.HasIndex("PcId");

                    b.ToTable("AppPcs");
                });

            modelBuilder.Entity("project.Models.InfoNetwork", b =>
                {
                    b.Property<int>("IdInfoNet")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IP_Adress");

                    b.Property<string>("MAC_Adress");

                    b.Property<int?>("PcName");

                    b.HasKey("IdInfoNet");

                    b.HasIndex("PcName");

                    b.ToTable("InfoNetworks");
                });

            modelBuilder.Entity("project.Models.InfoSystem", b =>
                {
                    b.Property<int>("IdSystem")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CPU_Logical_Core");

                    b.Property<string>("CPU_Physical_Core");

                    b.Property<string>("ComputerName");

                    b.Property<string>("OS_Architecture");

                    b.Property<string>("OS_Version");

                    b.Property<string>("OsSystem");

                    b.Property<int?>("PcName");

                    b.HasKey("IdSystem");

                    b.HasIndex("PcName");

                    b.ToTable("InfoSystems");
                });

            modelBuilder.Entity("project.Models.Parc", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("nvarchar(22)")
                        .HasMaxLength(12);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(22)")
                        .HasMaxLength(12);

                    b.HasKey("ID");

                    b.ToTable("Parcs");
                });

            modelBuilder.Entity("project.Models.Pc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AD")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(3);

                    b.Property<string>("Adress_Mac")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("ParcID");

                    b.HasKey("Id");

                    b.HasIndex("ParcID");

                    b.ToTable("Pcs");
                });

            modelBuilder.Entity("project.Models.Performance", b =>
                {
                    b.Property<int>("IdPerf")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("CPU");

                    b.Property<string>("ComputerName");

                    b.Property<DateTime>("DateCreation");

                    b.Property<int?>("PcName");

                    b.Property<float>("RAM");

                    b.Property<float>("System_Up_Time");

                    b.HasKey("IdPerf");

                    b.HasIndex("PcName");

                    b.ToTable("Performances");
                });

            modelBuilder.Entity("project.Models.AppPc", b =>
                {
                    b.HasOne("project.Models.App", "App")
                        .WithMany("AppPcs")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("project.Models.Pc", "Pc")
                        .WithMany("AppsPCs")
                        .HasForeignKey("PcId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("project.Models.InfoNetwork", b =>
                {
                    b.HasOne("project.Models.Pc", "Pc")
                        .WithMany()
                        .HasForeignKey("PcName");
                });

            modelBuilder.Entity("project.Models.InfoSystem", b =>
                {
                    b.HasOne("project.Models.Pc", "Pc")
                        .WithMany()
                        .HasForeignKey("PcName");
                });

            modelBuilder.Entity("project.Models.Pc", b =>
                {
                    b.HasOne("project.Models.Parc", "Parc")
                        .WithMany()
                        .HasForeignKey("ParcID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("project.Models.Performance", b =>
                {
                    b.HasOne("project.Models.Pc", "Pc")
                        .WithMany()
                        .HasForeignKey("PcName");
                });
#pragma warning restore 612, 618
        }
    }
}
